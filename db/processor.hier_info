|processor
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
KEY[0] => ~NO_FANOUT~
KEY[1] => Reset.IN1
CLOCK_50 => processorCLOCK.CLK
CLOCK_50 => counter[0].CLK
CLOCK_50 => counter[1].CLK
CLOCK_50 => counter[2].CLK
CLOCK_50 => counter[3].CLK
CLOCK_50 => counter[4].CLK
CLOCK_50 => counter[5].CLK
CLOCK_50 => counter[6].CLK
CLOCK_50 => counter[7].CLK
CLOCK_50 => counter[8].CLK
CLOCK_50 => counter[9].CLK
CLOCK_50 => counter[10].CLK
CLOCK_50 => counter[11].CLK
CLOCK_50 => counter[12].CLK
CLOCK_50 => counter[13].CLK
CLOCK_50 => counter[14].CLK
CLOCK_50 => counter[15].CLK
CLOCK_50 => counter[16].CLK
CLOCK_50 => counter[17].CLK
CLOCK_50 => counter[18].CLK
CLOCK_50 => counter[19].CLK
CLOCK_50 => counter[20].CLK
CLOCK_50 => counter[21].CLK
CLOCK_50 => counter[22].CLK
CLOCK_50 => counter[23].CLK
CLOCK_50 => counter[24].CLK
CLOCK_50 => counter[25].CLK
CLOCK_50 => counter[26].CLK
CLOCK_50 => counter[27].CLK
CLOCK_50 => counter[28].CLK
CLOCK_50 => counter[29].CLK
CLOCK_50 => counter[30].CLK
CLOCK_50 => counter[31].CLK
HEX5[0] << datapath:Datapath.HEX5
HEX5[1] << datapath:Datapath.HEX5
HEX5[2] << datapath:Datapath.HEX5
HEX5[3] << datapath:Datapath.HEX5
HEX5[4] << datapath:Datapath.HEX5
HEX5[5] << datapath:Datapath.HEX5
HEX5[6] << datapath:Datapath.HEX5
HEX4[0] << datapath:Datapath.HEX4
HEX4[1] << datapath:Datapath.HEX4
HEX4[2] << datapath:Datapath.HEX4
HEX4[3] << datapath:Datapath.HEX4
HEX4[4] << datapath:Datapath.HEX4
HEX4[5] << datapath:Datapath.HEX4
HEX4[6] << datapath:Datapath.HEX4
HEX3[0] << datapath:Datapath.HEX3
HEX3[1] << datapath:Datapath.HEX3
HEX3[2] << datapath:Datapath.HEX3
HEX3[3] << datapath:Datapath.HEX3
HEX3[4] << datapath:Datapath.HEX3
HEX3[5] << datapath:Datapath.HEX3
HEX3[6] << datapath:Datapath.HEX3
HEX2[0] << datapath:Datapath.HEX2
HEX2[1] << datapath:Datapath.HEX2
HEX2[2] << datapath:Datapath.HEX2
HEX2[3] << datapath:Datapath.HEX2
HEX2[4] << datapath:Datapath.HEX2
HEX2[5] << datapath:Datapath.HEX2
HEX2[6] << datapath:Datapath.HEX2
HEX1[0] << datapath:Datapath.HEX1
HEX1[1] << datapath:Datapath.HEX1
HEX1[2] << datapath:Datapath.HEX1
HEX1[3] << datapath:Datapath.HEX1
HEX1[4] << datapath:Datapath.HEX1
HEX1[5] << datapath:Datapath.HEX1
HEX1[6] << datapath:Datapath.HEX1
HEX0[0] << datapath:Datapath.HEX0
HEX0[1] << datapath:Datapath.HEX0
HEX0[2] << datapath:Datapath.HEX0
HEX0[3] << datapath:Datapath.HEX0
HEX0[4] << datapath:Datapath.HEX0
HEX0[5] << datapath:Datapath.HEX0
HEX0[6] << datapath:Datapath.HEX0
LEDR[0] << datapath:Datapath.LEDs
LEDR[1] << datapath:Datapath.LEDs
LEDR[2] << datapath:Datapath.LEDs
LEDR[3] << datapath:Datapath.LEDs
LEDR[4] << datapath:Datapath.LEDs
LEDR[5] << datapath:Datapath.LEDs
LEDR[6] << datapath:Datapath.LEDs
LEDR[7] << datapath:Datapath.LEDs
LEDR[8] << datapath:Datapath.LEDs
LEDR[9] << datapath:Datapath.LEDs


|processor|datapath:Datapath
CLOCK_50 => CLOCK_50.IN5
PCwrite => PCwrite.IN1
AddrSel => ADDR.OUTPUTSELECT
AddrSel => ADDR.OUTPUTSELECT
AddrSel => ADDR.OUTPUTSELECT
AddrSel => ADDR.OUTPUTSELECT
AddrSel => ADDR.OUTPUTSELECT
AddrSel => ADDR.OUTPUTSELECT
AddrSel => ADDR.OUTPUTSELECT
AddrSel => ADDR.OUTPUTSELECT
MemRead => IOmemRead.DATAB
MemRead => ActualMemRead.DATAA
MemWrite => IOmemWrite.DATAB
MemWrite => ActualMemWrite.DATAA
IRload => IRload.IN1
MDRload => MDRout[0]~reg0.ENA
MDRload => MDRout[1]~reg0.ENA
MDRload => MDRout[2]~reg0.ENA
MDRload => MDRout[3]~reg0.ENA
MDRload => MDRout[4]~reg0.ENA
MDRload => MDRout[5]~reg0.ENA
MDRload => MDRout[6]~reg0.ENA
MDRload => MDRout[7]~reg0.ENA
RASel => RAmux.OUTPUTSELECT
RASel => RAmux.OUTPUTSELECT
RFWrite => RFWrite.IN1
ABLD => dataBr[0]~reg0.ENA
ABLD => dataBr[1]~reg0.ENA
ABLD => dataBr[2]~reg0.ENA
ABLD => dataBr[3]~reg0.ENA
ABLD => dataBr[4]~reg0.ENA
ABLD => dataBr[5]~reg0.ENA
ABLD => dataBr[6]~reg0.ENA
ABLD => dataBr[7]~reg0.ENA
ABLD => dataAr[0]~reg0.ENA
ABLD => dataAr[1]~reg0.ENA
ABLD => dataAr[2]~reg0.ENA
ABLD => dataAr[3]~reg0.ENA
ABLD => dataAr[4]~reg0.ENA
ABLD => dataAr[5]~reg0.ENA
ABLD => dataAr[6]~reg0.ENA
ABLD => dataAr[7]~reg0.ENA
ALU_A => ALU_Ain.OUTPUTSELECT
ALU_A => ALU_Ain.OUTPUTSELECT
ALU_A => ALU_Ain.OUTPUTSELECT
ALU_A => ALU_Ain.OUTPUTSELECT
ALU_A => ALU_Ain.OUTPUTSELECT
ALU_A => ALU_Ain.OUTPUTSELECT
ALU_A => ALU_Ain.OUTPUTSELECT
ALU_A => ALU_Ain.OUTPUTSELECT
ALU_B[0] => Mux0.IN6
ALU_B[0] => Mux1.IN6
ALU_B[0] => Mux2.IN6
ALU_B[0] => Mux3.IN6
ALU_B[0] => Mux4.IN6
ALU_B[0] => Mux5.IN6
ALU_B[0] => Mux6.IN6
ALU_B[0] => Mux7.IN6
ALU_B[1] => Mux0.IN5
ALU_B[1] => Mux1.IN5
ALU_B[1] => Mux2.IN5
ALU_B[1] => Mux3.IN5
ALU_B[1] => Mux4.IN5
ALU_B[1] => Mux5.IN5
ALU_B[1] => Mux6.IN5
ALU_B[1] => Mux7.IN5
ALU_B[2] => Mux0.IN4
ALU_B[2] => Mux1.IN4
ALU_B[2] => Mux2.IN4
ALU_B[2] => Mux3.IN4
ALU_B[2] => Mux4.IN4
ALU_B[2] => Mux5.IN4
ALU_B[2] => Mux6.IN4
ALU_B[2] => Mux7.IN4
RegIn => RegIn_W.OUTPUTSELECT
RegIn => RegIn_W.OUTPUTSELECT
RegIn => RegIn_W.OUTPUTSELECT
RegIn => RegIn_W.OUTPUTSELECT
RegIn => RegIn_W.OUTPUTSELECT
RegIn => RegIn_W.OUTPUTSELECT
RegIn => RegIn_W.OUTPUTSELECT
RegIn => RegIn_W.OUTPUTSELECT
ALUop[0] => ALUop[0].IN1
ALUop[1] => ALUop[1].IN1
ALUop[2] => ALUop[2].IN1
FlagWrite => Z~reg0.ENA
FlagWrite => N~reg0.ENA
ALUoutLD => ALU_RegIn[0]~reg0.ENA
ALUoutLD => ALU_RegIn[1]~reg0.ENA
ALUoutLD => ALU_RegIn[2]~reg0.ENA
ALUoutLD => ALU_RegIn[3]~reg0.ENA
ALUoutLD => ALU_RegIn[4]~reg0.ENA
ALUoutLD => ALU_RegIn[5]~reg0.ENA
ALUoutLD => ALU_RegIn[6]~reg0.ENA
ALUoutLD => ALU_RegIn[7]~reg0.ENA
instruction[0] <= IR:InstructionRegister.instruction
instruction[1] <= IR:InstructionRegister.instruction
instruction[2] <= IR:InstructionRegister.instruction
instruction[3] <= IR:InstructionRegister.instruction
IRout[0] <= IR:InstructionRegister.IRout
IRout[1] <= IR:InstructionRegister.IRout
IRout[2] <= IR:InstructionRegister.IRout
IRout[3] <= IR:InstructionRegister.IRout
IRout[4] <= IR:InstructionRegister.IRout
IRout[5] <= IR:InstructionRegister.IRout
IRout[6] <= IR:InstructionRegister.IRout
IRout[7] <= IR:InstructionRegister.IRout
N <= N~reg0.DB_MAX_OUTPUT_PORT_TYPE
Z <= Z~reg0.DB_MAX_OUTPUT_PORT_TYPE
ALU_PC[0] <= ALU_PC[0].DB_MAX_OUTPUT_PORT_TYPE
ALU_PC[1] <= ALU_PC[1].DB_MAX_OUTPUT_PORT_TYPE
ALU_PC[2] <= ALU_PC[2].DB_MAX_OUTPUT_PORT_TYPE
ALU_PC[3] <= ALU_PC[3].DB_MAX_OUTPUT_PORT_TYPE
ALU_PC[4] <= ALU_PC[4].DB_MAX_OUTPUT_PORT_TYPE
ALU_PC[5] <= ALU_PC[5].DB_MAX_OUTPUT_PORT_TYPE
ALU_PC[6] <= ALU_PC[6].DB_MAX_OUTPUT_PORT_TYPE
ALU_PC[7] <= ALU_PC[7].DB_MAX_OUTPUT_PORT_TYPE
PC_Addr[0] <= PC:ProgramCounter.PCout
PC_Addr[1] <= PC:ProgramCounter.PCout
PC_Addr[2] <= PC:ProgramCounter.PCout
PC_Addr[3] <= PC:ProgramCounter.PCout
PC_Addr[4] <= PC:ProgramCounter.PCout
PC_Addr[5] <= PC:ProgramCounter.PCout
PC_Addr[6] <= PC:ProgramCounter.PCout
PC_Addr[7] <= PC:ProgramCounter.PCout
ADDR[0] <= ADDR.DB_MAX_OUTPUT_PORT_TYPE
ADDR[1] <= ADDR.DB_MAX_OUTPUT_PORT_TYPE
ADDR[2] <= ADDR.DB_MAX_OUTPUT_PORT_TYPE
ADDR[3] <= ADDR.DB_MAX_OUTPUT_PORT_TYPE
ADDR[4] <= ADDR.DB_MAX_OUTPUT_PORT_TYPE
ADDR[5] <= ADDR.DB_MAX_OUTPUT_PORT_TYPE
ADDR[6] <= ADDR.DB_MAX_OUTPUT_PORT_TYPE
ADDR[7] <= ADDR.DB_MAX_OUTPUT_PORT_TYPE
MemOut[0] <= MemOut[0].DB_MAX_OUTPUT_PORT_TYPE
MemOut[1] <= MemOut[1].DB_MAX_OUTPUT_PORT_TYPE
MemOut[2] <= MemOut[2].DB_MAX_OUTPUT_PORT_TYPE
MemOut[3] <= MemOut[3].DB_MAX_OUTPUT_PORT_TYPE
MemOut[4] <= MemOut[4].DB_MAX_OUTPUT_PORT_TYPE
MemOut[5] <= MemOut[5].DB_MAX_OUTPUT_PORT_TYPE
MemOut[6] <= MemOut[6].DB_MAX_OUTPUT_PORT_TYPE
MemOut[7] <= MemOut[7].DB_MAX_OUTPUT_PORT_TYPE
IR_A[0] <= IR:InstructionRegister.RA
IR_A[1] <= IR:InstructionRegister.RA
RAmux[0] <= RAmux[0].DB_MAX_OUTPUT_PORT_TYPE
RAmux[1] <= RAmux[1].DB_MAX_OUTPUT_PORT_TYPE
IR_B[0] <= IR_B[0].DB_MAX_OUTPUT_PORT_TYPE
IR_B[1] <= IR_B[1].DB_MAX_OUTPUT_PORT_TYPE
MDRout[0] <= MDRout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MDRout[1] <= MDRout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MDRout[2] <= MDRout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MDRout[3] <= MDRout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MDRout[4] <= MDRout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MDRout[5] <= MDRout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MDRout[6] <= MDRout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MDRout[7] <= MDRout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Imm4[0] <= IR:InstructionRegister.Imm4SE
Imm4[1] <= IR:InstructionRegister.Imm4SE
Imm4[2] <= IR:InstructionRegister.Imm4SE
Imm4[3] <= IR:InstructionRegister.Imm4SE
Imm4[4] <= IR:InstructionRegister.Imm4SE
Imm4[5] <= IR:InstructionRegister.Imm4SE
Imm4[6] <= IR:InstructionRegister.Imm4SE
Imm4[7] <= IR:InstructionRegister.Imm4SE
Imm5[0] <= IR:InstructionRegister.Imm5ZE
Imm5[1] <= IR:InstructionRegister.Imm5ZE
Imm5[2] <= IR:InstructionRegister.Imm5ZE
Imm5[3] <= IR:InstructionRegister.Imm5ZE
Imm5[4] <= IR:InstructionRegister.Imm5ZE
Imm5[5] <= IR:InstructionRegister.Imm5ZE
Imm5[6] <= IR:InstructionRegister.Imm5ZE
Imm5[7] <= IR:InstructionRegister.Imm5ZE
Imm2[0] <= IR:InstructionRegister.Imm2ZE
Imm2[1] <= IR:InstructionRegister.Imm2ZE
Imm2[2] <= IR:InstructionRegister.Imm2ZE
Imm2[3] <= IR:InstructionRegister.Imm2ZE
Imm2[4] <= IR:InstructionRegister.Imm2ZE
Imm2[5] <= IR:InstructionRegister.Imm2ZE
Imm2[6] <= IR:InstructionRegister.Imm2ZE
Imm2[7] <= IR:InstructionRegister.Imm2ZE
dataA[0] <= register_file:RegisterFile.dataA
dataA[1] <= register_file:RegisterFile.dataA
dataA[2] <= register_file:RegisterFile.dataA
dataA[3] <= register_file:RegisterFile.dataA
dataA[4] <= register_file:RegisterFile.dataA
dataA[5] <= register_file:RegisterFile.dataA
dataA[6] <= register_file:RegisterFile.dataA
dataA[7] <= register_file:RegisterFile.dataA
dataB[0] <= register_file:RegisterFile.dataB
dataB[1] <= register_file:RegisterFile.dataB
dataB[2] <= register_file:RegisterFile.dataB
dataB[3] <= register_file:RegisterFile.dataB
dataB[4] <= register_file:RegisterFile.dataB
dataB[5] <= register_file:RegisterFile.dataB
dataB[6] <= register_file:RegisterFile.dataB
dataB[7] <= register_file:RegisterFile.dataB
dataAr[0] <= dataAr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataAr[1] <= dataAr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataAr[2] <= dataAr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataAr[3] <= dataAr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataAr[4] <= dataAr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataAr[5] <= dataAr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataAr[6] <= dataAr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataAr[7] <= dataAr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataBr[0] <= dataBr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataBr[1] <= dataBr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataBr[2] <= dataBr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataBr[3] <= dataBr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataBr[4] <= dataBr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataBr[5] <= dataBr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataBr[6] <= dataBr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataBr[7] <= dataBr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RegIn_W[0] <= RegIn_W[0].DB_MAX_OUTPUT_PORT_TYPE
RegIn_W[1] <= RegIn_W[1].DB_MAX_OUTPUT_PORT_TYPE
RegIn_W[2] <= RegIn_W[2].DB_MAX_OUTPUT_PORT_TYPE
RegIn_W[3] <= RegIn_W[3].DB_MAX_OUTPUT_PORT_TYPE
RegIn_W[4] <= RegIn_W[4].DB_MAX_OUTPUT_PORT_TYPE
RegIn_W[5] <= RegIn_W[5].DB_MAX_OUTPUT_PORT_TYPE
RegIn_W[6] <= RegIn_W[6].DB_MAX_OUTPUT_PORT_TYPE
RegIn_W[7] <= RegIn_W[7].DB_MAX_OUTPUT_PORT_TYPE
ALU_Ain[0] <= ALU_Ain[0].DB_MAX_OUTPUT_PORT_TYPE
ALU_Ain[1] <= ALU_Ain[1].DB_MAX_OUTPUT_PORT_TYPE
ALU_Ain[2] <= ALU_Ain[2].DB_MAX_OUTPUT_PORT_TYPE
ALU_Ain[3] <= ALU_Ain[3].DB_MAX_OUTPUT_PORT_TYPE
ALU_Ain[4] <= ALU_Ain[4].DB_MAX_OUTPUT_PORT_TYPE
ALU_Ain[5] <= ALU_Ain[5].DB_MAX_OUTPUT_PORT_TYPE
ALU_Ain[6] <= ALU_Ain[6].DB_MAX_OUTPUT_PORT_TYPE
ALU_Ain[7] <= ALU_Ain[7].DB_MAX_OUTPUT_PORT_TYPE
ALU_Bin[0] <= ALU_Bin[0].DB_MAX_OUTPUT_PORT_TYPE
ALU_Bin[1] <= ALU_Bin[1].DB_MAX_OUTPUT_PORT_TYPE
ALU_Bin[2] <= ALU_Bin[2].DB_MAX_OUTPUT_PORT_TYPE
ALU_Bin[3] <= ALU_Bin[3].DB_MAX_OUTPUT_PORT_TYPE
ALU_Bin[4] <= ALU_Bin[4].DB_MAX_OUTPUT_PORT_TYPE
ALU_Bin[5] <= ALU_Bin[5].DB_MAX_OUTPUT_PORT_TYPE
ALU_Bin[6] <= ALU_Bin[6].DB_MAX_OUTPUT_PORT_TYPE
ALU_Bin[7] <= ALU_Bin[7].DB_MAX_OUTPUT_PORT_TYPE
ALU_N <= ALU:ALU.N
ALU_Z <= ALU:ALU.Z
ALU_RegIn[0] <= ALU_RegIn[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ALU_RegIn[1] <= ALU_RegIn[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ALU_RegIn[2] <= ALU_RegIn[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ALU_RegIn[3] <= ALU_RegIn[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ALU_RegIn[4] <= ALU_RegIn[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ALU_RegIn[5] <= ALU_RegIn[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ALU_RegIn[6] <= ALU_RegIn[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ALU_RegIn[7] <= ALU_RegIn[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
IOmemADDR[0] <= IOmemADDR[0].DB_MAX_OUTPUT_PORT_TYPE
IOmemADDR[1] <= IOmemADDR[1].DB_MAX_OUTPUT_PORT_TYPE
IOmemADDR[2] <= IOmemADDR[2].DB_MAX_OUTPUT_PORT_TYPE
IOmemADDR[3] <= IOmemADDR[3].DB_MAX_OUTPUT_PORT_TYPE
IOmemADDR[4] <= IOmemADDR[4].DB_MAX_OUTPUT_PORT_TYPE
IOmemADDR[5] <= IOmemADDR[5].DB_MAX_OUTPUT_PORT_TYPE
IOmemADDR[6] <= IOmemADDR[6].DB_MAX_OUTPUT_PORT_TYPE
IOmemADDR[7] <= IOmemADDR[7].DB_MAX_OUTPUT_PORT_TYPE
IOdataIn[0] <= IOdataIn[0].DB_MAX_OUTPUT_PORT_TYPE
IOdataIn[1] <= IOdataIn[1].DB_MAX_OUTPUT_PORT_TYPE
IOdataIn[2] <= IOdataIn[2].DB_MAX_OUTPUT_PORT_TYPE
IOdataIn[3] <= IOdataIn[3].DB_MAX_OUTPUT_PORT_TYPE
IOdataIn[4] <= IOdataIn[4].DB_MAX_OUTPUT_PORT_TYPE
IOdataIn[5] <= IOdataIn[5].DB_MAX_OUTPUT_PORT_TYPE
IOdataIn[6] <= IOdataIn[6].DB_MAX_OUTPUT_PORT_TYPE
IOdataIn[7] <= IOdataIn[7].DB_MAX_OUTPUT_PORT_TYPE
IOdataOut[0] <= MMIO:memoryMap.DataOut
IOdataOut[1] <= MMIO:memoryMap.DataOut
IOdataOut[2] <= MMIO:memoryMap.DataOut
IOdataOut[3] <= MMIO:memoryMap.DataOut
IOdataOut[4] <= MMIO:memoryMap.DataOut
IOdataOut[5] <= MMIO:memoryMap.DataOut
IOdataOut[6] <= MMIO:memoryMap.DataOut
IOdataOut[7] <= MMIO:memoryMap.DataOut
IOmemRead <= IOmemRead.DB_MAX_OUTPUT_PORT_TYPE
IOmemWrite <= IOmemWrite.DB_MAX_OUTPUT_PORT_TYPE
ActualMemADDR[0] <= ActualMemADDR[0].DB_MAX_OUTPUT_PORT_TYPE
ActualMemADDR[1] <= ActualMemADDR[1].DB_MAX_OUTPUT_PORT_TYPE
ActualMemADDR[2] <= ActualMemADDR[2].DB_MAX_OUTPUT_PORT_TYPE
ActualMemADDR[3] <= ActualMemADDR[3].DB_MAX_OUTPUT_PORT_TYPE
ActualMemADDR[4] <= ActualMemADDR[4].DB_MAX_OUTPUT_PORT_TYPE
ActualMemADDR[5] <= ActualMemADDR[5].DB_MAX_OUTPUT_PORT_TYPE
ActualMemADDR[6] <= ActualMemADDR[6].DB_MAX_OUTPUT_PORT_TYPE
ActualMemADDR[7] <= ActualMemADDR[7].DB_MAX_OUTPUT_PORT_TYPE
ActualDataIn[0] <= ActualDataIn[0].DB_MAX_OUTPUT_PORT_TYPE
ActualDataIn[1] <= ActualDataIn[1].DB_MAX_OUTPUT_PORT_TYPE
ActualDataIn[2] <= ActualDataIn[2].DB_MAX_OUTPUT_PORT_TYPE
ActualDataIn[3] <= ActualDataIn[3].DB_MAX_OUTPUT_PORT_TYPE
ActualDataIn[4] <= ActualDataIn[4].DB_MAX_OUTPUT_PORT_TYPE
ActualDataIn[5] <= ActualDataIn[5].DB_MAX_OUTPUT_PORT_TYPE
ActualDataIn[6] <= ActualDataIn[6].DB_MAX_OUTPUT_PORT_TYPE
ActualDataIn[7] <= ActualDataIn[7].DB_MAX_OUTPUT_PORT_TYPE
ActualDataOut[0] <= memory:Memory.Data_out
ActualDataOut[1] <= memory:Memory.Data_out
ActualDataOut[2] <= memory:Memory.Data_out
ActualDataOut[3] <= memory:Memory.Data_out
ActualDataOut[4] <= memory:Memory.Data_out
ActualDataOut[5] <= memory:Memory.Data_out
ActualDataOut[6] <= memory:Memory.Data_out
ActualDataOut[7] <= memory:Memory.Data_out
ActualMemRead <= ActualMemRead.DB_MAX_OUTPUT_PORT_TYPE
ActualMemWrite <= ActualMemWrite.DB_MAX_OUTPUT_PORT_TYPE
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
SW[4] => SW[4].IN1
SW[5] => SW[5].IN1
SW[6] => SW[6].IN1
SW[7] => SW[7].IN1
SW[8] => SW[8].IN1
SW[9] => SW[9].IN1
KEYs[0] => KEYs[0].IN1
KEYs[1] => KEYs[1].IN1
KEYs[2] => KEYs[2].IN1
KEYs[3] => KEYs[3].IN1
KEYs[4] => KEYs[4].IN1
KEYs[5] => KEYs[5].IN1
KEYs[6] => KEYs[6].IN1
KEYs[7] => KEYs[7].IN1
KEYs[8] => KEYs[8].IN1
KEYs[9] => KEYs[9].IN1
LEDs[0] <= MMIO:memoryMap.LEDs
LEDs[1] <= MMIO:memoryMap.LEDs
LEDs[2] <= MMIO:memoryMap.LEDs
LEDs[3] <= MMIO:memoryMap.LEDs
LEDs[4] <= MMIO:memoryMap.LEDs
LEDs[5] <= MMIO:memoryMap.LEDs
LEDs[6] <= MMIO:memoryMap.LEDs
LEDs[7] <= MMIO:memoryMap.LEDs
LEDs[8] <= MMIO:memoryMap.LEDs
LEDs[9] <= MMIO:memoryMap.LEDs
HEX0[0] <= MMIO:memoryMap.HEX0
HEX0[1] <= MMIO:memoryMap.HEX0
HEX0[2] <= MMIO:memoryMap.HEX0
HEX0[3] <= MMIO:memoryMap.HEX0
HEX0[4] <= MMIO:memoryMap.HEX0
HEX0[5] <= MMIO:memoryMap.HEX0
HEX0[6] <= MMIO:memoryMap.HEX0
HEX1[0] <= MMIO:memoryMap.HEX1
HEX1[1] <= MMIO:memoryMap.HEX1
HEX1[2] <= MMIO:memoryMap.HEX1
HEX1[3] <= MMIO:memoryMap.HEX1
HEX1[4] <= MMIO:memoryMap.HEX1
HEX1[5] <= MMIO:memoryMap.HEX1
HEX1[6] <= MMIO:memoryMap.HEX1
HEX2[0] <= MMIO:memoryMap.HEX2
HEX2[1] <= MMIO:memoryMap.HEX2
HEX2[2] <= MMIO:memoryMap.HEX2
HEX2[3] <= MMIO:memoryMap.HEX2
HEX2[4] <= MMIO:memoryMap.HEX2
HEX2[5] <= MMIO:memoryMap.HEX2
HEX2[6] <= MMIO:memoryMap.HEX2
HEX3[0] <= MMIO:memoryMap.HEX3
HEX3[1] <= MMIO:memoryMap.HEX3
HEX3[2] <= MMIO:memoryMap.HEX3
HEX3[3] <= MMIO:memoryMap.HEX3
HEX3[4] <= MMIO:memoryMap.HEX3
HEX3[5] <= MMIO:memoryMap.HEX3
HEX3[6] <= MMIO:memoryMap.HEX3
HEX4[0] <= MMIO:memoryMap.HEX4
HEX4[1] <= MMIO:memoryMap.HEX4
HEX4[2] <= MMIO:memoryMap.HEX4
HEX4[3] <= MMIO:memoryMap.HEX4
HEX4[4] <= MMIO:memoryMap.HEX4
HEX4[5] <= MMIO:memoryMap.HEX4
HEX4[6] <= MMIO:memoryMap.HEX4
HEX5[0] <= MMIO:memoryMap.HEX5
HEX5[1] <= MMIO:memoryMap.HEX5
HEX5[2] <= MMIO:memoryMap.HEX5
HEX5[3] <= MMIO:memoryMap.HEX5
HEX5[4] <= MMIO:memoryMap.HEX5
HEX5[5] <= MMIO:memoryMap.HEX5
HEX5[6] <= MMIO:memoryMap.HEX5


|processor|datapath:Datapath|PC:ProgramCounter
CLK => PCout[0]~reg0.CLK
CLK => PCout[1]~reg0.CLK
CLK => PCout[2]~reg0.CLK
CLK => PCout[3]~reg0.CLK
CLK => PCout[4]~reg0.CLK
CLK => PCout[5]~reg0.CLK
CLK => PCout[6]~reg0.CLK
CLK => PCout[7]~reg0.CLK
PCin[0] => PCout[0]~reg0.DATAIN
PCin[1] => PCout[1]~reg0.DATAIN
PCin[2] => PCout[2]~reg0.DATAIN
PCin[3] => PCout[3]~reg0.DATAIN
PCin[4] => PCout[4]~reg0.DATAIN
PCin[5] => PCout[5]~reg0.DATAIN
PCin[6] => PCout[6]~reg0.DATAIN
PCin[7] => PCout[7]~reg0.DATAIN
PCwrite => PCout[0]~reg0.ENA
PCwrite => PCout[1]~reg0.ENA
PCwrite => PCout[2]~reg0.ENA
PCwrite => PCout[3]~reg0.ENA
PCwrite => PCout[4]~reg0.ENA
PCwrite => PCout[5]~reg0.ENA
PCwrite => PCout[6]~reg0.ENA
PCwrite => PCout[7]~reg0.ENA
PCout[0] <= PCout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PCout[1] <= PCout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PCout[2] <= PCout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PCout[3] <= PCout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PCout[4] <= PCout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PCout[5] <= PCout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PCout[6] <= PCout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PCout[7] <= PCout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap
CLK => CLK.IN6
ADDR[0] => Decoder0.IN7
ADDR[1] => Decoder0.IN6
ADDR[2] => Decoder0.IN5
ADDR[3] => Decoder0.IN4
ADDR[4] => Decoder0.IN3
ADDR[5] => Decoder0.IN2
ADDR[6] => Decoder0.IN1
ADDR[7] => Decoder0.IN0
DataIn[0] => LEDs.DATAB
DataIn[0] => LEDs.DATAB
DataIn[0] => HEXdata0.DATAB
DataIn[0] => HEXdata2.DATAB
DataIn[0] => HEXdata4.DATAB
DataIn[1] => LEDs.DATAB
DataIn[1] => LEDs.DATAB
DataIn[1] => HEXdata0.DATAB
DataIn[1] => HEXdata2.DATAB
DataIn[1] => HEXdata4.DATAB
DataIn[2] => LEDs.DATAB
DataIn[2] => HEXdata0.DATAB
DataIn[2] => HEXdata2.DATAB
DataIn[2] => HEXdata4.DATAB
DataIn[3] => LEDs.DATAB
DataIn[3] => HEXdata0.DATAB
DataIn[3] => HEXdata2.DATAB
DataIn[3] => HEXdata4.DATAB
DataIn[4] => LEDs.DATAB
DataIn[4] => HEXdata1.DATAB
DataIn[4] => HEXdata3.DATAB
DataIn[4] => HEXdata5.DATAB
DataIn[5] => LEDs.DATAB
DataIn[5] => HEXdata1.DATAB
DataIn[5] => HEXdata3.DATAB
DataIn[5] => HEXdata5.DATAB
DataIn[6] => LEDs.DATAB
DataIn[6] => HEXdata1.DATAB
DataIn[6] => HEXdata3.DATAB
DataIn[6] => HEXdata5.DATAB
DataIn[7] => LEDs.DATAB
DataIn[7] => HEXdata1.DATAB
DataIn[7] => HEXdata3.DATAB
DataIn[7] => HEXdata5.DATAB
DataOut[0] <= DataOut[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[1] <= DataOut[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[2] <= DataOut[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[3] <= DataOut[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[4] <= DataOut[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[5] <= DataOut[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[6] <= DataOut[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[7] <= DataOut[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
MemRead => Selector8.IN3
MemWrite => LEDs.OUTPUTSELECT
MemWrite => LEDs.OUTPUTSELECT
MemWrite => LEDs.OUTPUTSELECT
MemWrite => LEDs.OUTPUTSELECT
MemWrite => LEDs.OUTPUTSELECT
MemWrite => LEDs.OUTPUTSELECT
MemWrite => LEDs.OUTPUTSELECT
MemWrite => LEDs.OUTPUTSELECT
MemWrite => LEDs.OUTPUTSELECT
MemWrite => LEDs.OUTPUTSELECT
MemWrite => HEXdata1.OUTPUTSELECT
MemWrite => HEXdata1.OUTPUTSELECT
MemWrite => HEXdata1.OUTPUTSELECT
MemWrite => HEXdata1.OUTPUTSELECT
MemWrite => HEXdata0.OUTPUTSELECT
MemWrite => HEXdata0.OUTPUTSELECT
MemWrite => HEXdata0.OUTPUTSELECT
MemWrite => HEXdata0.OUTPUTSELECT
MemWrite => HEXdata3.OUTPUTSELECT
MemWrite => HEXdata3.OUTPUTSELECT
MemWrite => HEXdata3.OUTPUTSELECT
MemWrite => HEXdata3.OUTPUTSELECT
MemWrite => HEXdata2.OUTPUTSELECT
MemWrite => HEXdata2.OUTPUTSELECT
MemWrite => HEXdata2.OUTPUTSELECT
MemWrite => HEXdata2.OUTPUTSELECT
MemWrite => HEXdata5.OUTPUTSELECT
MemWrite => HEXdata5.OUTPUTSELECT
MemWrite => HEXdata5.OUTPUTSELECT
MemWrite => HEXdata5.OUTPUTSELECT
MemWrite => HEXdata4.OUTPUTSELECT
MemWrite => HEXdata4.OUTPUTSELECT
MemWrite => HEXdata4.OUTPUTSELECT
MemWrite => HEXdata4.OUTPUTSELECT
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
KEYs[0] => ~NO_FANOUT~
KEYs[1] => ~NO_FANOUT~
KEYs[2] => ~NO_FANOUT~
KEYs[3] => ~NO_FANOUT~
KEYs[4] => ~NO_FANOUT~
KEYs[5] => ~NO_FANOUT~
KEYs[6] => ~NO_FANOUT~
KEYs[7] => ~NO_FANOUT~
KEYs[8] => ~NO_FANOUT~
KEYs[9] => ~NO_FANOUT~
LEDs[0] <= LEDs[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDs[1] <= LEDs[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDs[2] <= LEDs[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDs[3] <= LEDs[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDs[4] <= LEDs[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDs[5] <= LEDs[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDs[6] <= LEDs[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDs[7] <= LEDs[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDs[8] <= LEDs[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDs[9] <= LEDs[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] <= reg_HEX:H0.display
HEX0[1] <= reg_HEX:H0.display
HEX0[2] <= reg_HEX:H0.display
HEX0[3] <= reg_HEX:H0.display
HEX0[4] <= reg_HEX:H0.display
HEX0[5] <= reg_HEX:H0.display
HEX0[6] <= reg_HEX:H0.display
HEX1[0] <= reg_HEX:H1.display
HEX1[1] <= reg_HEX:H1.display
HEX1[2] <= reg_HEX:H1.display
HEX1[3] <= reg_HEX:H1.display
HEX1[4] <= reg_HEX:H1.display
HEX1[5] <= reg_HEX:H1.display
HEX1[6] <= reg_HEX:H1.display
HEX2[0] <= reg_HEX:H2.display
HEX2[1] <= reg_HEX:H2.display
HEX2[2] <= reg_HEX:H2.display
HEX2[3] <= reg_HEX:H2.display
HEX2[4] <= reg_HEX:H2.display
HEX2[5] <= reg_HEX:H2.display
HEX2[6] <= reg_HEX:H2.display
HEX3[0] <= reg_HEX:H3.display
HEX3[1] <= reg_HEX:H3.display
HEX3[2] <= reg_HEX:H3.display
HEX3[3] <= reg_HEX:H3.display
HEX3[4] <= reg_HEX:H3.display
HEX3[5] <= reg_HEX:H3.display
HEX3[6] <= reg_HEX:H3.display
HEX4[0] <= reg_HEX:H4.display
HEX4[1] <= reg_HEX:H4.display
HEX4[2] <= reg_HEX:H4.display
HEX4[3] <= reg_HEX:H4.display
HEX4[4] <= reg_HEX:H4.display
HEX4[5] <= reg_HEX:H4.display
HEX4[6] <= reg_HEX:H4.display
HEX5[0] <= reg_HEX:H5.display
HEX5[1] <= reg_HEX:H5.display
HEX5[2] <= reg_HEX:H5.display
HEX5[3] <= reg_HEX:H5.display
HEX5[4] <= reg_HEX:H5.display
HEX5[5] <= reg_HEX:H5.display
HEX5[6] <= reg_HEX:H5.display


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H0
CLOCK_50 => display[0]~reg0.CLK
CLOCK_50 => display[1]~reg0.CLK
CLOCK_50 => display[2]~reg0.CLK
CLOCK_50 => display[3]~reg0.CLK
CLOCK_50 => display[4]~reg0.CLK
CLOCK_50 => display[5]~reg0.CLK
CLOCK_50 => display[6]~reg0.CLK
EN => display[0]~reg0.ENA
EN => display[1]~reg0.ENA
EN => display[2]~reg0.ENA
EN => display[3]~reg0.ENA
EN => display[4]~reg0.ENA
EN => display[5]~reg0.ENA
EN => display[6]~reg0.ENA
hex[0] => hex[0].IN1
hex[1] => hex[1].IN1
hex[2] => hex[2].IN1
hex[3] => hex[3].IN1
display[0] <= display[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H0|hex7seg:SEG
hex[0] => Decoder0.IN3
hex[1] => Decoder0.IN2
hex[2] => Decoder0.IN1
hex[3] => Decoder0.IN0
display[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H1
CLOCK_50 => display[0]~reg0.CLK
CLOCK_50 => display[1]~reg0.CLK
CLOCK_50 => display[2]~reg0.CLK
CLOCK_50 => display[3]~reg0.CLK
CLOCK_50 => display[4]~reg0.CLK
CLOCK_50 => display[5]~reg0.CLK
CLOCK_50 => display[6]~reg0.CLK
EN => display[0]~reg0.ENA
EN => display[1]~reg0.ENA
EN => display[2]~reg0.ENA
EN => display[3]~reg0.ENA
EN => display[4]~reg0.ENA
EN => display[5]~reg0.ENA
EN => display[6]~reg0.ENA
hex[0] => hex[0].IN1
hex[1] => hex[1].IN1
hex[2] => hex[2].IN1
hex[3] => hex[3].IN1
display[0] <= display[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H1|hex7seg:SEG
hex[0] => Decoder0.IN3
hex[1] => Decoder0.IN2
hex[2] => Decoder0.IN1
hex[3] => Decoder0.IN0
display[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H2
CLOCK_50 => display[0]~reg0.CLK
CLOCK_50 => display[1]~reg0.CLK
CLOCK_50 => display[2]~reg0.CLK
CLOCK_50 => display[3]~reg0.CLK
CLOCK_50 => display[4]~reg0.CLK
CLOCK_50 => display[5]~reg0.CLK
CLOCK_50 => display[6]~reg0.CLK
EN => display[0]~reg0.ENA
EN => display[1]~reg0.ENA
EN => display[2]~reg0.ENA
EN => display[3]~reg0.ENA
EN => display[4]~reg0.ENA
EN => display[5]~reg0.ENA
EN => display[6]~reg0.ENA
hex[0] => hex[0].IN1
hex[1] => hex[1].IN1
hex[2] => hex[2].IN1
hex[3] => hex[3].IN1
display[0] <= display[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H2|hex7seg:SEG
hex[0] => Decoder0.IN3
hex[1] => Decoder0.IN2
hex[2] => Decoder0.IN1
hex[3] => Decoder0.IN0
display[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H3
CLOCK_50 => display[0]~reg0.CLK
CLOCK_50 => display[1]~reg0.CLK
CLOCK_50 => display[2]~reg0.CLK
CLOCK_50 => display[3]~reg0.CLK
CLOCK_50 => display[4]~reg0.CLK
CLOCK_50 => display[5]~reg0.CLK
CLOCK_50 => display[6]~reg0.CLK
EN => display[0]~reg0.ENA
EN => display[1]~reg0.ENA
EN => display[2]~reg0.ENA
EN => display[3]~reg0.ENA
EN => display[4]~reg0.ENA
EN => display[5]~reg0.ENA
EN => display[6]~reg0.ENA
hex[0] => hex[0].IN1
hex[1] => hex[1].IN1
hex[2] => hex[2].IN1
hex[3] => hex[3].IN1
display[0] <= display[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H3|hex7seg:SEG
hex[0] => Decoder0.IN3
hex[1] => Decoder0.IN2
hex[2] => Decoder0.IN1
hex[3] => Decoder0.IN0
display[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H4
CLOCK_50 => display[0]~reg0.CLK
CLOCK_50 => display[1]~reg0.CLK
CLOCK_50 => display[2]~reg0.CLK
CLOCK_50 => display[3]~reg0.CLK
CLOCK_50 => display[4]~reg0.CLK
CLOCK_50 => display[5]~reg0.CLK
CLOCK_50 => display[6]~reg0.CLK
EN => display[0]~reg0.ENA
EN => display[1]~reg0.ENA
EN => display[2]~reg0.ENA
EN => display[3]~reg0.ENA
EN => display[4]~reg0.ENA
EN => display[5]~reg0.ENA
EN => display[6]~reg0.ENA
hex[0] => hex[0].IN1
hex[1] => hex[1].IN1
hex[2] => hex[2].IN1
hex[3] => hex[3].IN1
display[0] <= display[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H4|hex7seg:SEG
hex[0] => Decoder0.IN3
hex[1] => Decoder0.IN2
hex[2] => Decoder0.IN1
hex[3] => Decoder0.IN0
display[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H5
CLOCK_50 => display[0]~reg0.CLK
CLOCK_50 => display[1]~reg0.CLK
CLOCK_50 => display[2]~reg0.CLK
CLOCK_50 => display[3]~reg0.CLK
CLOCK_50 => display[4]~reg0.CLK
CLOCK_50 => display[5]~reg0.CLK
CLOCK_50 => display[6]~reg0.CLK
EN => display[0]~reg0.ENA
EN => display[1]~reg0.ENA
EN => display[2]~reg0.ENA
EN => display[3]~reg0.ENA
EN => display[4]~reg0.ENA
EN => display[5]~reg0.ENA
EN => display[6]~reg0.ENA
hex[0] => hex[0].IN1
hex[1] => hex[1].IN1
hex[2] => hex[2].IN1
hex[3] => hex[3].IN1
display[0] <= display[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|MMIO:memoryMap|reg_HEX:H5|hex7seg:SEG
hex[0] => Decoder0.IN3
hex[1] => Decoder0.IN2
hex[2] => Decoder0.IN1
hex[3] => Decoder0.IN0
display[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|memory:Memory
CLK => mem.we_a.CLK
CLK => mem.waddr_a[7].CLK
CLK => mem.waddr_a[6].CLK
CLK => mem.waddr_a[5].CLK
CLK => mem.waddr_a[4].CLK
CLK => mem.waddr_a[3].CLK
CLK => mem.waddr_a[2].CLK
CLK => mem.waddr_a[1].CLK
CLK => mem.waddr_a[0].CLK
CLK => mem.data_a[7].CLK
CLK => mem.data_a[6].CLK
CLK => mem.data_a[5].CLK
CLK => mem.data_a[4].CLK
CLK => mem.data_a[3].CLK
CLK => mem.data_a[2].CLK
CLK => mem.data_a[1].CLK
CLK => mem.data_a[0].CLK
CLK => mem.CLK0
MemRead => Data_out.OUTPUTSELECT
MemRead => Data_out.OUTPUTSELECT
MemRead => Data_out.OUTPUTSELECT
MemRead => Data_out.OUTPUTSELECT
MemRead => Data_out.OUTPUTSELECT
MemRead => Data_out.OUTPUTSELECT
MemRead => Data_out.OUTPUTSELECT
MemRead => Data_out.OUTPUTSELECT
MemWrite => mem.we_a.DATAIN
MemWrite => mem.WE
ADDR[0] => mem.waddr_a[0].DATAIN
ADDR[0] => mem.WADDR
ADDR[0] => mem.RADDR
ADDR[1] => mem.waddr_a[1].DATAIN
ADDR[1] => mem.WADDR1
ADDR[1] => mem.RADDR1
ADDR[2] => mem.waddr_a[2].DATAIN
ADDR[2] => mem.WADDR2
ADDR[2] => mem.RADDR2
ADDR[3] => mem.waddr_a[3].DATAIN
ADDR[3] => mem.WADDR3
ADDR[3] => mem.RADDR3
ADDR[4] => mem.waddr_a[4].DATAIN
ADDR[4] => mem.WADDR4
ADDR[4] => mem.RADDR4
ADDR[5] => mem.waddr_a[5].DATAIN
ADDR[5] => mem.WADDR5
ADDR[5] => mem.RADDR5
ADDR[6] => mem.waddr_a[6].DATAIN
ADDR[6] => mem.WADDR6
ADDR[6] => mem.RADDR6
ADDR[7] => mem.waddr_a[7].DATAIN
ADDR[7] => mem.WADDR7
ADDR[7] => mem.RADDR7
Data_in[0] => mem.data_a[0].DATAIN
Data_in[0] => mem.DATAIN
Data_in[1] => mem.data_a[1].DATAIN
Data_in[1] => mem.DATAIN1
Data_in[2] => mem.data_a[2].DATAIN
Data_in[2] => mem.DATAIN2
Data_in[3] => mem.data_a[3].DATAIN
Data_in[3] => mem.DATAIN3
Data_in[4] => mem.data_a[4].DATAIN
Data_in[4] => mem.DATAIN4
Data_in[5] => mem.data_a[5].DATAIN
Data_in[5] => mem.DATAIN5
Data_in[6] => mem.data_a[6].DATAIN
Data_in[6] => mem.DATAIN6
Data_in[7] => mem.data_a[7].DATAIN
Data_in[7] => mem.DATAIN7
Data_out[0] <= Data_out.DB_MAX_OUTPUT_PORT_TYPE
Data_out[1] <= Data_out.DB_MAX_OUTPUT_PORT_TYPE
Data_out[2] <= Data_out.DB_MAX_OUTPUT_PORT_TYPE
Data_out[3] <= Data_out.DB_MAX_OUTPUT_PORT_TYPE
Data_out[4] <= Data_out.DB_MAX_OUTPUT_PORT_TYPE
Data_out[5] <= Data_out.DB_MAX_OUTPUT_PORT_TYPE
Data_out[6] <= Data_out.DB_MAX_OUTPUT_PORT_TYPE
Data_out[7] <= Data_out.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|IR:InstructionRegister
CLK => IRreg[0].CLK
CLK => IRreg[1].CLK
CLK => IRreg[2].CLK
CLK => IRreg[3].CLK
CLK => IRreg[4].CLK
CLK => IRreg[5].CLK
CLK => IRreg[6].CLK
CLK => IRreg[7].CLK
IRin[0] => IRreg[0].DATAIN
IRin[1] => IRreg[1].DATAIN
IRin[2] => IRreg[2].DATAIN
IRin[3] => IRreg[3].DATAIN
IRin[4] => IRreg[4].DATAIN
IRin[5] => IRreg[5].DATAIN
IRin[6] => IRreg[6].DATAIN
IRin[7] => IRreg[7].DATAIN
IRload => IRreg[0].ENA
IRload => IRreg[1].ENA
IRload => IRreg[2].ENA
IRload => IRreg[3].ENA
IRload => IRreg[4].ENA
IRload => IRreg[5].ENA
IRload => IRreg[6].ENA
IRload => IRreg[7].ENA
RA[0] <= IRreg[6].DB_MAX_OUTPUT_PORT_TYPE
RA[1] <= IRreg[7].DB_MAX_OUTPUT_PORT_TYPE
RB[0] <= IRreg[4].DB_MAX_OUTPUT_PORT_TYPE
RB[1] <= IRreg[5].DB_MAX_OUTPUT_PORT_TYPE
instruction[0] <= IRreg[0].DB_MAX_OUTPUT_PORT_TYPE
instruction[1] <= IRreg[1].DB_MAX_OUTPUT_PORT_TYPE
instruction[2] <= IRreg[2].DB_MAX_OUTPUT_PORT_TYPE
instruction[3] <= IRreg[3].DB_MAX_OUTPUT_PORT_TYPE
Imm4SE[0] <= IRreg[4].DB_MAX_OUTPUT_PORT_TYPE
Imm4SE[1] <= IRreg[5].DB_MAX_OUTPUT_PORT_TYPE
Imm4SE[2] <= IRreg[6].DB_MAX_OUTPUT_PORT_TYPE
Imm4SE[3] <= IRreg[7].DB_MAX_OUTPUT_PORT_TYPE
Imm4SE[4] <= IRreg[7].DB_MAX_OUTPUT_PORT_TYPE
Imm4SE[5] <= IRreg[7].DB_MAX_OUTPUT_PORT_TYPE
Imm4SE[6] <= IRreg[7].DB_MAX_OUTPUT_PORT_TYPE
Imm4SE[7] <= IRreg[7].DB_MAX_OUTPUT_PORT_TYPE
Imm5ZE[0] <= IRreg[3].DB_MAX_OUTPUT_PORT_TYPE
Imm5ZE[1] <= IRreg[4].DB_MAX_OUTPUT_PORT_TYPE
Imm5ZE[2] <= IRreg[5].DB_MAX_OUTPUT_PORT_TYPE
Imm5ZE[3] <= IRreg[6].DB_MAX_OUTPUT_PORT_TYPE
Imm5ZE[4] <= IRreg[7].DB_MAX_OUTPUT_PORT_TYPE
Imm5ZE[5] <= <GND>
Imm5ZE[6] <= <GND>
Imm5ZE[7] <= <GND>
Imm2ZE[0] <= IRreg[3].DB_MAX_OUTPUT_PORT_TYPE
Imm2ZE[1] <= IRreg[4].DB_MAX_OUTPUT_PORT_TYPE
Imm2ZE[2] <= <GND>
Imm2ZE[3] <= <GND>
Imm2ZE[4] <= <GND>
Imm2ZE[5] <= <GND>
Imm2ZE[6] <= <GND>
Imm2ZE[7] <= <GND>
IRout[0] <= IRreg[0].DB_MAX_OUTPUT_PORT_TYPE
IRout[1] <= IRreg[1].DB_MAX_OUTPUT_PORT_TYPE
IRout[2] <= IRreg[2].DB_MAX_OUTPUT_PORT_TYPE
IRout[3] <= IRreg[3].DB_MAX_OUTPUT_PORT_TYPE
IRout[4] <= IRreg[4].DB_MAX_OUTPUT_PORT_TYPE
IRout[5] <= IRreg[5].DB_MAX_OUTPUT_PORT_TYPE
IRout[6] <= IRreg[6].DB_MAX_OUTPUT_PORT_TYPE
IRout[7] <= IRreg[7].DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|register_file:RegisterFile
CLOCK_50 => r0[0].CLK
CLOCK_50 => r0[1].CLK
CLOCK_50 => r0[2].CLK
CLOCK_50 => r0[3].CLK
CLOCK_50 => r0[4].CLK
CLOCK_50 => r0[5].CLK
CLOCK_50 => r0[6].CLK
CLOCK_50 => r0[7].CLK
CLOCK_50 => r1[0].CLK
CLOCK_50 => r1[1].CLK
CLOCK_50 => r1[2].CLK
CLOCK_50 => r1[3].CLK
CLOCK_50 => r1[4].CLK
CLOCK_50 => r1[5].CLK
CLOCK_50 => r1[6].CLK
CLOCK_50 => r1[7].CLK
CLOCK_50 => r2[0].CLK
CLOCK_50 => r2[1].CLK
CLOCK_50 => r2[2].CLK
CLOCK_50 => r2[3].CLK
CLOCK_50 => r2[4].CLK
CLOCK_50 => r2[5].CLK
CLOCK_50 => r2[6].CLK
CLOCK_50 => r2[7].CLK
CLOCK_50 => r3[0].CLK
CLOCK_50 => r3[1].CLK
CLOCK_50 => r3[2].CLK
CLOCK_50 => r3[3].CLK
CLOCK_50 => r3[4].CLK
CLOCK_50 => r3[5].CLK
CLOCK_50 => r3[6].CLK
CLOCK_50 => r3[7].CLK
RFWrite => r0[5].ENA
RFWrite => r0[4].ENA
RFWrite => r0[3].ENA
RFWrite => r0[2].ENA
RFWrite => r0[1].ENA
RFWrite => r0[0].ENA
RFWrite => r0[6].ENA
RFWrite => r0[7].ENA
RFWrite => r1[0].ENA
RFWrite => r1[1].ENA
RFWrite => r1[2].ENA
RFWrite => r1[3].ENA
RFWrite => r1[4].ENA
RFWrite => r1[5].ENA
RFWrite => r1[6].ENA
RFWrite => r1[7].ENA
RFWrite => r2[0].ENA
RFWrite => r2[1].ENA
RFWrite => r2[2].ENA
RFWrite => r2[3].ENA
RFWrite => r2[4].ENA
RFWrite => r2[5].ENA
RFWrite => r2[6].ENA
RFWrite => r2[7].ENA
RFWrite => r3[0].ENA
RFWrite => r3[1].ENA
RFWrite => r3[2].ENA
RFWrite => r3[3].ENA
RFWrite => r3[4].ENA
RFWrite => r3[5].ENA
RFWrite => r3[6].ENA
RFWrite => r3[7].ENA
regA[0] => Mux0.IN1
regA[0] => Mux1.IN1
regA[0] => Mux2.IN1
regA[0] => Mux3.IN1
regA[0] => Mux4.IN1
regA[0] => Mux5.IN1
regA[0] => Mux6.IN1
regA[0] => Mux7.IN1
regA[1] => Mux0.IN0
regA[1] => Mux1.IN0
regA[1] => Mux2.IN0
regA[1] => Mux3.IN0
regA[1] => Mux4.IN0
regA[1] => Mux5.IN0
regA[1] => Mux6.IN0
regA[1] => Mux7.IN0
regB[0] => Mux8.IN1
regB[0] => Mux9.IN1
regB[0] => Mux10.IN1
regB[0] => Mux11.IN1
regB[0] => Mux12.IN1
regB[0] => Mux13.IN1
regB[0] => Mux14.IN1
regB[0] => Mux15.IN1
regB[1] => Mux8.IN0
regB[1] => Mux9.IN0
regB[1] => Mux10.IN0
regB[1] => Mux11.IN0
regB[1] => Mux12.IN0
regB[1] => Mux13.IN0
regB[1] => Mux14.IN0
regB[1] => Mux15.IN0
regW[0] => Decoder0.IN1
regW[1] => Decoder0.IN0
dataW[0] => r3.DATAB
dataW[0] => r2.DATAB
dataW[0] => r1.DATAB
dataW[0] => r0.DATAB
dataW[1] => r3.DATAB
dataW[1] => r2.DATAB
dataW[1] => r1.DATAB
dataW[1] => r0.DATAB
dataW[2] => r3.DATAB
dataW[2] => r2.DATAB
dataW[2] => r1.DATAB
dataW[2] => r0.DATAB
dataW[3] => r3.DATAB
dataW[3] => r2.DATAB
dataW[3] => r1.DATAB
dataW[3] => r0.DATAB
dataW[4] => r3.DATAB
dataW[4] => r2.DATAB
dataW[4] => r1.DATAB
dataW[4] => r0.DATAB
dataW[5] => r3.DATAB
dataW[5] => r2.DATAB
dataW[5] => r1.DATAB
dataW[5] => r0.DATAB
dataW[6] => r3.DATAB
dataW[6] => r2.DATAB
dataW[6] => r1.DATAB
dataW[6] => r0.DATAB
dataW[7] => r3.DATAB
dataW[7] => r2.DATAB
dataW[7] => r1.DATAB
dataW[7] => r0.DATAB
dataA[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
dataA[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
dataA[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
dataA[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
dataA[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
dataA[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
dataA[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
dataA[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
dataB[0] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
dataB[1] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
dataB[2] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
dataB[3] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
dataB[4] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
dataB[5] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
dataB[6] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
dataB[7] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE


|processor|datapath:Datapath|ALU:ALU
ALUop[0] => Mux0.IN10
ALUop[0] => Mux1.IN10
ALUop[0] => Mux2.IN10
ALUop[0] => Mux3.IN10
ALUop[0] => Mux4.IN10
ALUop[0] => Mux5.IN10
ALUop[0] => Mux6.IN10
ALUop[0] => Mux7.IN10
ALUop[1] => Mux0.IN9
ALUop[1] => Mux1.IN9
ALUop[1] => Mux2.IN9
ALUop[1] => Mux3.IN9
ALUop[1] => Mux4.IN9
ALUop[1] => Mux5.IN9
ALUop[1] => Mux6.IN9
ALUop[1] => Mux7.IN9
ALUop[2] => Mux0.IN8
ALUop[2] => Mux1.IN8
ALUop[2] => Mux2.IN8
ALUop[2] => Mux3.IN8
ALUop[2] => Mux4.IN8
ALUop[2] => Mux5.IN8
ALUop[2] => Mux6.IN8
ALUop[2] => Mux7.IN8
A[0] => Add0.IN8
A[0] => Add1.IN16
A[0] => ALUout.IN0
A[0] => ALUout.IN0
A[0] => ShiftLeft0.IN8
A[0] => ShiftRight0.IN8
A[1] => Add0.IN7
A[1] => Add1.IN15
A[1] => ALUout.IN0
A[1] => ALUout.IN0
A[1] => ShiftLeft0.IN7
A[1] => ShiftRight0.IN7
A[2] => Add0.IN6
A[2] => Add1.IN14
A[2] => ALUout.IN0
A[2] => ALUout.IN0
A[2] => ShiftLeft0.IN6
A[2] => ShiftRight0.IN6
A[3] => Add0.IN5
A[3] => Add1.IN13
A[3] => ALUout.IN0
A[3] => ALUout.IN0
A[3] => ShiftLeft0.IN5
A[3] => ShiftRight0.IN5
A[4] => Add0.IN4
A[4] => Add1.IN12
A[4] => ALUout.IN0
A[4] => ALUout.IN0
A[4] => ShiftLeft0.IN4
A[4] => ShiftRight0.IN4
A[5] => Add0.IN3
A[5] => Add1.IN11
A[5] => ALUout.IN0
A[5] => ALUout.IN0
A[5] => ShiftLeft0.IN3
A[5] => ShiftRight0.IN3
A[6] => Add0.IN2
A[6] => Add1.IN10
A[6] => ALUout.IN0
A[6] => ALUout.IN0
A[6] => ShiftLeft0.IN2
A[6] => ShiftRight0.IN2
A[7] => Add0.IN1
A[7] => Add1.IN9
A[7] => ALUout.IN0
A[7] => ALUout.IN0
A[7] => ShiftLeft0.IN1
A[7] => ShiftRight0.IN1
B[0] => Add0.IN16
B[0] => ALUout.IN1
B[0] => ALUout.IN1
B[0] => ShiftLeft0.IN10
B[0] => ShiftRight0.IN10
B[0] => Add1.IN8
B[1] => Add0.IN15
B[1] => ALUout.IN1
B[1] => ALUout.IN1
B[1] => ShiftLeft0.IN9
B[1] => ShiftRight0.IN9
B[1] => Add1.IN7
B[2] => Add0.IN14
B[2] => ALUout.IN1
B[2] => ALUout.IN1
B[2] => Add1.IN6
B[3] => Add0.IN13
B[3] => ALUout.IN1
B[3] => ALUout.IN1
B[3] => Add1.IN5
B[4] => Add0.IN12
B[4] => ALUout.IN1
B[4] => ALUout.IN1
B[4] => Add1.IN4
B[5] => Add0.IN11
B[5] => ALUout.IN1
B[5] => ALUout.IN1
B[5] => Add1.IN3
B[6] => Add0.IN10
B[6] => ALUout.IN1
B[6] => ALUout.IN1
B[6] => Add1.IN2
B[7] => Add0.IN9
B[7] => ALUout.IN1
B[7] => ALUout.IN1
B[7] => Add1.IN1
N <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
Z <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
ALUout[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
ALUout[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ALUout[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ALUout[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ALUout[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ALUout[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ALUout[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ALUout[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|processor|FSM:FiniteStateMachine
CLOCK_50 => currState[0]~reg0.CLK
CLOCK_50 => currState[1]~reg0.CLK
CLOCK_50 => currState[2]~reg0.CLK
Reset => currState.OUTPUTSELECT
Reset => currState.OUTPUTSELECT
Reset => currState.OUTPUTSELECT
instruction[0] => Decoder0.IN3
instruction[0] => Mux0.IN18
instruction[0] => Equal0.IN3
instruction[0] => Equal1.IN3
instruction[0] => Equal2.IN3
instruction[0] => Equal3.IN1
instruction[0] => Equal4.IN3
instruction[0] => Equal5.IN3
instruction[0] => Equal6.IN1
instruction[0] => Equal7.IN1
instruction[0] => Equal8.IN3
instruction[0] => Equal9.IN0
instruction[0] => Equal10.IN2
instruction[1] => Decoder0.IN2
instruction[1] => Mux0.IN17
instruction[1] => Equal0.IN2
instruction[1] => Equal1.IN1
instruction[1] => Equal2.IN2
instruction[1] => Equal3.IN0
instruction[1] => Equal4.IN2
instruction[1] => Equal5.IN0
instruction[1] => Equal6.IN3
instruction[1] => Equal7.IN3
instruction[1] => Equal8.IN1
instruction[1] => Equal9.IN3
instruction[1] => Equal10.IN1
instruction[2] => Decoder0.IN1
instruction[2] => Mux0.IN16
instruction[2] => Equal0.IN0
instruction[2] => Equal1.IN0
instruction[2] => Equal2.IN1
instruction[2] => Equal3.IN2
instruction[2] => Equal4.IN1
instruction[2] => Equal5.IN2
instruction[2] => Equal6.IN2
instruction[2] => Equal7.IN0
instruction[2] => Equal8.IN2
instruction[2] => Equal9.IN2
instruction[2] => Equal10.IN0
instruction[3] => Decoder0.IN0
instruction[3] => Mux0.IN15
instruction[3] => Equal0.IN1
instruction[3] => Equal1.IN2
instruction[3] => Equal2.IN0
instruction[3] => Equal4.IN0
instruction[3] => Equal5.IN1
instruction[3] => Equal6.IN0
instruction[3] => Equal7.IN2
instruction[3] => Equal8.IN0
instruction[3] => Equal9.IN1
IRout[0] => ~NO_FANOUT~
IRout[1] => ~NO_FANOUT~
IRout[2] => ~NO_FANOUT~
IRout[3] => ~NO_FANOUT~
IRout[4] => ~NO_FANOUT~
IRout[5] => Decoder1.IN0
IRout[6] => ~NO_FANOUT~
IRout[7] => ~NO_FANOUT~
N => Mux0.IN13
Z => Mux0.IN19
Z => Mux0.IN14
PCwrite <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
AddrSel <= AddrSel.DB_MAX_OUTPUT_PORT_TYPE
MemRead <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
MemWrite <= MemWrite.DB_MAX_OUTPUT_PORT_TYPE
IRload <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
MDRload <= MDRload.DB_MAX_OUTPUT_PORT_TYPE
RASel <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
RFWrite <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ABLD <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
ALU_A <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
ALU_B[0] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
ALU_B[1] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
ALU_B[2] <= ALU_B.DB_MAX_OUTPUT_PORT_TYPE
RegIn <= RegIn.DB_MAX_OUTPUT_PORT_TYPE
ALUop[0] <= ALUop.DB_MAX_OUTPUT_PORT_TYPE
ALUop[1] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
ALUop[2] <= ALUop.DB_MAX_OUTPUT_PORT_TYPE
FlagWrite <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
ALUoutLD <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
currState[0] <= currState[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currState[1] <= currState[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currState[2] <= currState[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
nextState[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
nextState[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
nextState[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
done <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


